# -*- coding: utf-8 -*-
"""
Created on Wed May  6 19:38:07 2020

@author: muril
"""

def get_biomass_vars(v,
                     l_vars,
                     res,
                     run_id,
                     setup_nml,
                     time_idx):

    #-------------------------------------------------------------#
    #------------------- get_biomass_vars ------------------------# 
    #-------------------------------------------------------------#
    #--- Goal: 
    #---    get crop carbon outputs from JULES and convert to biomass
    #--- Parameters: 
    #---    v           : Output biomass nm (e.g. 'stalk_dw')
    #---    l_vars      : List of JULES outputs to lookup
    #---    run_id      : Run ID that will be the folder name
    #---    setup_nml   : A dataframe of nml setup file CSV generated by update_nml_setup() or provided
    #---    time_idx    : Time indexers to be imported from res dic
    #--- Author:
    #---    Murilo Vianna (murilodsv@gmail.com)
    #----------------------------------------------------------# 
    
    import pandas as pd
    from get_model_perf import find_var_res
    from get_model_perf import c2b_frac
    
    #--- get needed variables in res
    ini_res   = True
    var_found = True
    for vn in l_vars:
        
        #--- find dependent variables in JULES outputs [res]
        df_vars_vn = find_var_res(vn,res,time_idx)
        
        if type(df_vars_vn) == type(None): 
            var_found = False
            print('Warning: Could not find variable '+str(vn)+' in JULES outputs to calculate '+str(v)+'.\n --- Please ensure variable '+str(vn)+' is included in the output.nml ---')
            continue            
            
        #--- get fraction of carbon on biomass
        cfrac = c2b_frac(vn,
                         run_id,
                         setup_nml)
    
        #--- convert Carbon to Biomass
        df_vars_vn[vn] = df_vars_vn['sim_value'] * (1 / cfrac)
        
        #--- drop uneeded cols            
        df_vars_vn     = df_vars_vn[time_idx+[vn]]
    
        #--- merge results
        if ini_res:
            df_vars = df_vars_vn                
            ini_res = False
        else:
            df_vars = pd.merge(df_vars, df_vars_vn, on = time_idx)
    
    if not var_found: df_vars = None
    return(df_vars)